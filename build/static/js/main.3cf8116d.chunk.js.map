{"version":3,"sources":["utils/scroll-to-top.js","components/alert-bar/alert-bar-styles.js","components/alert-bar/alert-bar.js","components/connect/connect.js","services/api/backend.js","routes/identity/identity.js","components/send-message/send-message.js","routes/communication/communication.js","components/app-bar/app-bar-styles.js","components/app-bar/app-bar.js","index.js"],"names":["ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","useStyles","makeStyles","theme","error","backgroundColor","palette","dark","margin","spacing","success","icon","fontSize","opacity","marginRight","message","display","alignItems","AlertBar","props","useState","isOpen","setIsOpen","handleClose","setMessage","classes","type","typeClassName","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","SnackbarContent","className","aria-describedby","id","Error","CheckCircle","action","IconButton","key","aria-label","color","onClick","Close","Connect","authKey","setAuthKey","authCRT","setAuthCRT","brokerProtocol","brokerURL","setBrokerURL","uuid","clientID","setClientID","setError","correct","setCorrect","isConnected","setIsConnected","onSubmit","event","data","fetch","protocol","method","body","JSON","stringify","postConnect","then","response","ok","text","catch","preventDefault","Grid","container","justify","item","xs","Typography","variant","TextField","label","multiline","fullWidth","value","rows","onChange","target","Button","disabled","Identity","Container","maxWidth","Box","border","p","borderRadius","Divider","SendMessage","topic","setTopic","postSendMessage","Communication","root","flexGrow","background","default","marginBottom","menuButton","toolbar","borderBottom","divider","typoAppBarTitle","marginLeft","LamassuAppBar","AppBar","position","elevation","Toolbar","Avatar","alt","src","noWrap","component","Link","to","replace","dotenv","config","render","CssBaseline","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.3cf8116d.chunk.js","sourcesContent":["import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  error: {\n    backgroundColor: theme.palette.error.dark,\n    margin: theme.spacing(1),\n  },\n  success: {\n    backgroundColor: theme.palette.success.dark,\n    margin: theme.spacing(1),\n  },\n  icon: {\n    fontSize: 20,\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Snackbar, SnackbarContent, IconButton } from '@material-ui/core';\nimport {\n  Error as ErrorIcon,\n  CheckCircle as CheckCircleIcon,\n  Close as CloseIcon,\n} from '@material-ui/icons';\n\nimport { useStyles } from './alert-bar-styles';\n\nexport default function AlertBar(props) {\n  const [isOpen, setIsOpen] = useState(true);\n\n  const handleClose = () => {\n    setIsOpen(false);\n    props.setMessage(null);\n  };\n\n  const classes = useStyles();\n  const type = props.type;\n  const typeClassName = type === 'error' ? classes.error : classes.success;\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      open={isOpen}\n      autoHideDuration={6000}\n      onClose={handleClose}\n    >\n      <SnackbarContent\n        className={typeClassName}\n        aria-describedby=\"client-snackbar\"\n        message={\n          <span id=\"client-snackbar\" className={classes.message}>\n            {type === 'error' ? (\n              <ErrorIcon className={classes.icon} />\n            ) : (\n              <CheckCircleIcon className={classes.icon} />\n            )}\n            {props.message}\n          </span>\n        }\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            onClick={handleClose}\n          >\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n      />\n    </Snackbar>\n  );\n}\n\nAlertBar.propTypes = {\n  message: PropTypes.string.isRequired,\n  setMessage: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired,\n};\n","import React, { useState } from 'react';\nimport uuid from 'react-uuid';\n\nimport { Grid, Typography, TextField, Button } from '@material-ui/core';\nimport { postConnect, postDisconnect } from '../../services/api/backend';\n\nimport AlertBar from '../alert-bar';\n\nexport default function Connect() {\n  const brokerProtocol = process.env.REACT_APP_BROKER_PROTOCOL;\n  const brokerHost = process.env.REACT_APP_BROKER_HOST;\n  const brokerPort = process.env.REACT_APP_BROKER_PORT;\n\n  const fakeCert =\n    '-----BEGIN CERTIFICATE-----\\nMIIDoTCCAomgAwIBAgIUNQ7h/ctroojAZHsyR/BbdG1TMkQwDQYJKoZIhvcNAQEL\\nBQAwYDELMAkGA1UEBhMCRVMxETAPBgNVBAgMCEdpcHV6a29hMREwDwYDVQQHDAhB\\ncnJhc2F0ZTEaMBgGA1UECgwRTEtTIE5leHQsIFMuQ29vcC4xDzANBgNVBAMMBmNs\\naWVudDAeFw0yMDEwMTQyMjM0MTRaFw0yMDExMTMyMjM0MTRaMGAxCzAJBgNVBAYT\\nAkVTMREwDwYDVQQIDAhHaXB1emtvYTERMA8GA1UEBwwIQXJyYXNhdGUxGjAYBgNV\\nBAoMEUxLUyBOZXh0LCBTLkNvb3AuMQ8wDQYDVQQDDAZjbGllbnQwggEiMA0GCSqG\\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCwQZpUUQpeDIDN7yaGgeLcO8apGISGoOsH\\np3QAS4M7rtVdB+/o/VhL/kzX6d5jJJzhvKexvgqoZCm2KerIqZbBq3BhhMj7k2h8\\nPb3WfkDAwpxhLR5P3rdptjIjUgNZKgvG0lzsY0uzTYP4k4rRfwYK7752qf8JP1rG\\nxL+NWaGqF2GBRqmknJxLDGeVe5KPZxJ95fGmCHNUjQL1aP+X5mIIXWsLkrXn5O3/\\ndX+X9CVA/hYhbkYyhI69ojurokL8v03bR4C1MNiN0OGPg9Tu6RA3+RS8CzZRlPqM\\nORVm3KWTlPSTmUlHl0x73GHKRfpny2/Pwu78TP8Mow019B/19OOZAgMBAAGjUzBR\\nMB0GA1UdDgQWBBSH/kKSaHjMBqYFyzqBJL++T7aG/DAfBgNVHSMEGDAWgBSH/kKS\\naHjMBqYFyzqBJL++T7aG/DAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBCwUA\\nA4IBAQBAF5Y8+a+tkC+4i90FYcInUEUWICyPTdE9jswohxgq71at3U27pLIXNaOY\\nGI2jsUNKZA/m87R1G14TuHmfkAv/Xinzr4nyhprTmhCydz5JicfW2tK7/La/WiGa\\nIOLBK25jQEMYy3EQEMfqgRYHWXCMMnoY1s6W5QpWbwOEFN2n5YGExHNEI15CbQZF\\nkC9YrQjR0syepqHJFAXQxXRdBltA07bIhTpecFOKjC9RSk3ep26kSirh23MfwoFn\\nuG9qC3qPsavn9mifdKTRHRi25ydY4bLUkZ3YElxdAQw8BX8dVibdNPPqhlpvw/kV\\nDXv/7XyJZMjVxC2xu2404ddjqml1\\n-----END CERTIFICATE-----';\n  const fakeKey =\n    '-----BEGIN RSA PRIVATE KEY-----\\nMIIEowIBAAKCAQEAsEGaVFEKXgyAze8mhoHi3DvGqRiEhqDrB6d0AEuDO67VXQfv\\n6P1YS/5M1+neYySc4bynsb4KqGQptinqyKmWwatwYYTI+5NofD291n5AwMKcYS0e\\nT963abYyI1IDWSoLxtJc7GNLs02D+JOK0X8GCu++dqn/CT9axsS/jVmhqhdhgUap\\npJycSwxnlXuSj2cSfeXxpghzVI0C9Wj/l+ZiCF1rC5K15+Tt/3V/l/QlQP4WIW5G\\nMoSOvaI7q6JC/L9N20eAtTDYjdDhj4PU7ukQN/kUvAs2UZT6jDkVZtylk5T0k5lJ\\nR5dMe9xhykX6Z8tvz8Lu/Ez/DKMNNfQf9fTjmQIDAQABAoIBACXbMUaC0XM5xEB2\\n6RNiulMLE7Ql6/DuhwxxztxxW5JqDrGYjtK/90L7L44AUR+CMZ/aYTov0yIvwTW6\\n8w5+Pj8Cj3SijHhcRMjKigeTvlyob+X/Rs9oyoQN+d7UMpvoB/eAHy02dn/gWkP9\\njIdKfQXEUGg0Qu69iMXAZFP7uFlLqMmVDJbEDThOP+OgPIa3QVFMBTo4d6FdhohO\\nMaE1MWu/rys/4L7po6C2FNo3c4KtrOYc8wd8uu/EPJwSaGxrYysYk4Wxf/D7LES1\\ndoDaiHxfA6QKh1jUk0cKcVZVhcssI/9/ijv0b4QfVj28UxK5LyJ7iybp+W/UBTnb\\nMxNK5MECgYEA5NEO8MTo7lFcwUi4GSxebA9cdWz5/L7rbL/aEraaRXTOWqXobNwM\\n7Bbh0g7Bzxk7qxiRcHAj1aIEo/1waWIFJx3Nv/S5gMLynX/1a4JWcWCjeSoMEBuB\\nOGy+O7CfJB7AW16ouJsiaoDaKaKVxk06hGCmIqdmfPFQvS3YWqGGOq0CgYEAxTIK\\nEdkR9g/iR1RmWqIu15lvGsXK/gIBLe2Y7ejPz3JK/d2k1E7NHy7kni5BlQsl30oo\\nG7wgOW0buwfD6zsRKlUWQkZNxi2/sGJ1HB+oyMOOWdLGj/+XI5y4dgh3VoW+3KaU\\nlInaTZCGy724e2oAjdBBSbRTQpCjMGzIrPyW9h0CgYEAlzIRJkVnCTrYCJvtkizA\\nQ7UuyiT1Vu4tEFIBXkYs0GJrjHh+iZgqLcK8+xlnNVqeE+OLDvn6o8qIOHhaVDhB\\n4WQPNZ0XCp9Gw43u9FhOmGJcAs8m42nZTBiG51hBABQV1QpKgJl591gnUEWvpDYZ\\nyak3fkSRM1QdnrPxd4mt8Y0CgYBcf0VT6+NN7VNxq/g66TpZrUH9Z+v4y83r0jha\\n2Eqp/u2IOTA42iHDT8azH/VpSQphu7ImmE7xQOmyCElxDIrXtYO0YK/YltsEjJps\\nL7mHOpuKLKExKG2nqbqouv3nWuMVMxoctrDsky93YC2pziYmXxpQzUIExj2V2GEl\\nK3JQTQKBgCZZCcQkC1TCcTY/jINGFg7xHansA970WmKdrRk+BaEPbufi5HWPqU0d\\ngCn1xV7Cq3dUtoutEbiYyksl2Yp/QgJkL8CkXAIuj2OKPkD0lXF54dBs7ipWqgxO\\nQ2fjHb9VETG7nG/H6jT/N/UuCL9erKjaLk+yclEwsw/pJ2LXhR8V\\n-----END RSA PRIVATE KEY-----';\n\n  const [authKey, setAuthKey] = useState(fakeKey);\n  const [authCRT, setAuthCRT] = useState(fakeCert);\n  const [brokerURL, setBrokerURL] = useState(\n    brokerProtocol + '://' + brokerHost + ':' + brokerPort\n  );\n  const [clientID, setClientID] = useState(uuid());\n  const [error, setError] = useState(null);\n  const [correct, setCorrect] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n\n  const handleCertValueChange = (event) => {\n    setAuthCRT(event.target.value);\n  };\n\n  const handleKeyValueChange = (event) => {\n    setAuthKey(event.target.value);\n  };\n\n  const handleBrokerURLChange = (event) => {\n    setBrokerURL(event.target.value);\n  };\n\n  const handleClientIDChange = (event) => {\n    setClientID(event.target.value);\n  };\n\n  const handleDisconnect = (event) => {\n    postDisconnect()\n      .then((response) => {\n        if (response.ok) {\n          setError(null);\n          setIsConnected(false);\n          setCorrect('Successfully disconnected from broker');\n        }\n      })\n      .catch((error) => {\n        setCorrect(null);\n        setError(error.message);\n      });\n    event.preventDefault();\n  };\n\n  const handleConnectSubmit = (event) => {\n    const data = {\n      authKey: authKey,\n      authCRT: authCRT,\n      brokerURL: brokerURL,\n      clientID: clientID,\n    };\n    postConnect(data)\n      .then((response) => {\n        if (response.ok) {\n          setIsConnected(true);\n          setCorrect('Successfully connected to broker');\n        } else {\n          response.text().then((text) => {\n            setError(text);\n            setIsConnected(false);\n          });\n        }\n      })\n      .catch((error) => setError(error.message));\n    event.preventDefault();\n  };\n\n  return (\n    <form onSubmit={handleConnectSubmit}>\n      {error !== null && (\n        <AlertBar setMessage={setError} message={error} type=\"error\" />\n      )}\n      {correct !== null && (\n        <AlertBar setMessage={setCorrect} message={correct} type=\"success\" />\n      )}\n      <Grid container spacing={2} justify=\"center\" alignItems=\"flex-end\">\n        <Grid item xs={6}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography variant=\"h6\">Insert certificate:</Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Insert certificate here\"\n                multiline\n                fullWidth\n                value={authCRT}\n                rows={10}\n                onChange={handleCertValueChange}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={6}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography variant=\"h6\">Insert private key:</Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Insert private key here\"\n                multiline\n                fullWidth\n                value={authKey}\n                rows={10}\n                onChange={handleKeyValueChange}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container spacing={2}>\n            <Grid item xs={6}>\n              <Typography variant=\"h6\">Insert Broker URL:</Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography variant=\"h6\">Insert Client ID:</Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                label=\"Insert Broker URL here\"\n                value={brokerURL}\n                fullWidth\n                onChange={handleBrokerURLChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                label=\"Insert Client ID here\"\n                value={clientID}\n                fullWidth\n                onChange={handleClientIDChange}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={3}>\n          <Button\n            fullWidth\n            disabled={isConnected}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Connect\n          </Button>\n        </Grid>\n        <Grid item xs={3}>\n          <Button\n            fullWidth\n            type=\"button\"\n            disabled={!isConnected}\n            color=\"secondary\"\n            onClick={handleDisconnect}\n            variant=\"contained\"\n          >\n            Disconnect\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n","const protocol = process.env.REACT_APP_DEVICE_PROTOCOL;\nconst host = process.env.REACT_APP_DEVICE_HOST;\nconst port = process.env.REACT_APP_DEVICE_PORT;\nconst path = process.env.REACT_APP_DEVICE_PATH;\n\nexport function postConnect(data) {\n  const fetchUrl = protocol + '://' + host + ':' + port + path + '/connect';\n  return fetch(fetchUrl, {\n    method: 'POST',\n    body: JSON.stringify(data),\n  });\n}\n\nexport function postSendMessage(data) {\n  const fetchUrl = protocol + '://' + host + ':' + port + path + '/message';\n  return fetch(fetchUrl, {\n    method: 'POST',\n    body: JSON.stringify(data),\n  });\n}\n\nexport function postDisconnect() {\n  const fetchUrl = protocol + '://' + host + ':' + port + path + '/disconnect';\n  return fetch(fetchUrl, {\n    method: 'POST',\n    body: JSON.stringify({}),\n  });\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Container, Grid, Box, Typography, Divider } from '@material-ui/core';\n\nimport Connect from '../../components/connect';\n\nexport default function Identity(props) {\n  return (\n    <Container maxWidth=\"md\">\n      <Box border={1} p={4} borderRadius=\"borderRadius\">\n        <Grid container spacing={2} justify=\"center\">\n          <Grid item xs={12}>\n            <Typography variant=\"h3\">Identity</Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Divider />\n          </Grid>\n          <Grid item xs={12}>\n            <Connect\n              isConnected={props.isConnected}\n              setIsConnected={props.setIsConnected}\n            />\n          </Grid>\n        </Grid>\n      </Box>\n    </Container>\n  );\n}\n\nIdentity.propTypes = {\n  isConnected: PropTypes.bool.isRequired,\n  setIsConnected: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\n\nimport { Grid, Typography, TextField, Button } from '@material-ui/core';\nimport { postSendMessage } from '../../services/api/backend';\nimport AlertBar from '../alert-bar';\n\nexport default function SendMessage() {\n  const [message, setMessage] = useState('');\n  const [topic, setTopic] = useState('lamassu-sample');\n  const [error, setError] = useState(null);\n  const [correct, setCorrect] = useState(null);\n\n  const handleTopicValueChange = (event) => {\n    setTopic(event.target.value);\n  };\n\n  const handleMessageValueChange = (event) => {\n    setMessage(event.target.value);\n  };\n\n  const handleSendMessageSubmit = (event) => {\n    const data = {\n      message: message,\n      topic: topic,\n    };\n    postSendMessage(data)\n      .then((response) => {\n        if (response.ok) {\n          setCorrect('Message successfully sent');\n          setError(null);\n        } else {\n          response.text().then((text) => {\n            setError(text);\n            setCorrect(null);\n          });\n        }\n      })\n      .catch((error) => setError(error.message));\n    event.preventDefault();\n  };\n\n  return (\n    <form onSubmit={handleSendMessageSubmit}>\n      {error !== null && (\n        <AlertBar setMessage={setError} message={error} type=\"error\" />\n      )}\n      {correct !== null && (\n        <AlertBar setMessage={setCorrect} message={correct} type=\"success\" />\n      )}\n      <Grid container spacing={2} justify=\"center\" alignItems=\"flex-end\">\n        <Grid item xs={12}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography variant=\"h6\">Insert topic:</Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Insert topic here\"\n                multiline\n                fullWidth\n                value={topic}\n                onChange={handleTopicValueChange}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography variant=\"h6\">Insert message:</Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Insert message here\"\n                multiline\n                fullWidth\n                value={message}\n                rows={2}\n                onChange={handleMessageValueChange}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={3}>\n          <Button fullWidth type=\"submit\" variant=\"contained\" color=\"primary\">\n            Send Message\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n","import React from 'react';\n\nimport { Container, Grid, Box, Typography, Divider } from '@material-ui/core';\n\nimport SendMessage from '../../components/send-message';\n\nexport default function Communication() {\n  return (\n    <Container maxWidth=\"md\">\n      <Box border={1} p={4} borderRadius=\"borderRadius\">\n        <Grid container spacing={2} justify=\"center\">\n          <Grid item xs={12}>\n            <Typography variant=\"h3\">Communication</Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Divider />\n          </Grid>\n          <Grid item xs={12}>\n            <SendMessage />\n          </Grid>\n        </Grid>\n      </Box>\n    </Container>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    marginBottom: theme.spacing(2),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  toolbar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  typoAppBarTitle: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(1),\n  },\n}));\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\n\nimport { useStyles } from './app-bar-styles';\n\nexport default function LamassuAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"inherit\" elevation={0}>\n        <Toolbar className={classes.toolbar}>\n          <Avatar\n            variant=\"square\"\n            alt=\"Lamassu Logo\"\n            src=\"lamassu_logo.png\"\n          ></Avatar>\n          <Typography variant=\"h6\" noWrap className={classes.typoAppBarTitle}>\n            Lamassu Device Virtual\n          </Typography>\n          <Button component={Link} to=\"/\" replace variant=\"text\">\n            Identity\n          </Button>\n          <Button component={Link} to=\"/communication\" replace variant=\"text\">\n            Communication\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport uuid from 'react-uuid';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\nimport 'typeface-roboto';\nimport dotenv from 'dotenv';\n\nimport { CssBaseline } from '@material-ui/core';\nimport ScrollToTop from './utils/scroll-to-top';\nimport Identity from './routes/identity';\nimport Communication from './routes/communication';\nimport LamassuAppBar from './components/app-bar';\n\ndotenv.config();\n\nrender(\n  <HashRouter>\n    <CssBaseline />\n    <LamassuAppBar />\n    <ScrollToTop />\n    <Switch>\n      <Route\n        exact\n        path=\"/\"\n        render={(props) => <Identity key={uuid()} {...props} />}\n      />\n      <Route\n        exact\n        path=\"/communication\"\n        render={(props) => <Communication key={uuid()} {...props} />}\n      />\n    </Switch>\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}